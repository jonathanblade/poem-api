name: CI

on: workflow_dispatch

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Run format check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    runs-on: ubuntu-latest
    needs: check
    env:
      SQLX_VERSION: 0.5.13
      SQLX_FEATURES: native-tls,sqlite
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config sqlite3

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v3
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --test-threads 1

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Deploy
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: poem-example-app
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
